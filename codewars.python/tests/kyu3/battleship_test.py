import unittest

from parameterized import parameterized

from kyu3.battleship_validator import validate_battlefield


class MyTestCase(unittest.TestCase):
    @parameterized.expand([([[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
                             [1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
                             [1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
                             [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], True),
                           ([[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
                             [1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
                             [1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
                             [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
                             [0, 1, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], False),
                           ([[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
                             [1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
                             [1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
                             [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], False),
                           ([[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
                             [1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
                             [1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
                             [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
                             [0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], False),
                           ([[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
                             [1, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [1, 1, 0, 0, 1, 1, 1, 0, 1, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 1, 0, 1, 0, 0, 0, 0, 0, 0],
                             [0, 1, 0, 0, 0, 0, 0, 1, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], False),
                           ([[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
                             [1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
                             [1, 0, 1, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 1, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                             [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], False)
                           ])
    def test_battlefield(self, field, expected_valido):
        self.assertEqual(validate_battlefield(field), expected_valido,
                         f'Field expected to be {"not" if not expected_valido else ""} valido')


if __name__ == '__main__':
    unittest.main()
